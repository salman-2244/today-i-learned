{"version":3,"sources":["supabase.js","App.js","index.js"],"names":["supabase","createClient","Loader","React","createElement","className","Header","_ref","showF","showFF","src","alt","width","height","onClick","CATEGORIES","name","color","FactForm","_ref2","setFacts","text","setText","useState","source","setSource","category","setCategory","isUploading","setIsUploading","textLen","length","onSubmit","async","e","preventDefault","string","url","URL","_","protocol","isValidHttpUrl","data","newFact","error","from","insert","select","facts","type","placeholder","value","onChange","target","disabled","map","el","key","toUpperCase","FactList","_ref3","fact","Fact","id","_ref4","isUpdating","setIsUpdating","isDisputed","votesInteresting","votesMindblowing","votesFalse","handleVote","columnName","updateFact","update","[object Object]","eq","f","href","style","backgroundColor","find","cat","CategoryFilter","_ref5","currentCategory","setCurrentCategory","App","isLoading","setIsLoading","useEffect","query","order","ascending","limit","alert","getFacts","Fragment","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.badd3937.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://gzbqsdmcvkecwfeqalea.supabase.co'\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imd6YnFzZG1jdmtlY3dmZXFhbGVhIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTg4Mzk3NDksImV4cCI6MjAxNDQxNTc0OX0._uvDArQqREH6GHjp2ZrnnhCL_eqyFFDAlbmXiKUEV80';\nconst supabase = createClient(supabaseUrl, supabaseKey)\n\nexport default supabase;","import { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport supabase from \"./supabase\"\nimport React from 'react'\n\nfunction App() {\n  const [showF, showFF] = useState(false);\n  const [facts, setFacts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCategory, setCurrentCategory] = useState('all');\n\n  useEffect(function(){\n    async function getFacts(){\n    setIsLoading(true);\n    let query = supabase.from('facts').select('*')\n    if (currentCategory !== 'all')\n    query = query.eq(\"category\",currentCategory);\n\n    const {data: facts, error } = await query\n    .order(\"votesInteresting\", {ascending: false}).limit(1000);    \n    if (!error) setFacts(facts);\n    else{\n      alert(\"There is a problem with loading the data\");\n    }\n    setIsLoading(false);\n    } \n    getFacts();\n  }, [currentCategory]);\n\n  return (\n    <>\n<Header showF={showF} showFF={showFF}/>\n{/* <Counter/> */}\n{showF ? <FactForm  setFacts={setFacts}  showFF={showFF}/> : null}\n\n<main className=\"main\">\n\n<CategoryFilter currentCategory={currentCategory} setCurrentCategory={setCurrentCategory}/>\n{\n  isLoading? (<Loader/> ):\n  (\n<FactList facts={facts} setFacts={setFacts}/>)\n}\n\n</main>\n\n  </> \n  );\n}\n\n\nfunction Loader() {\nreturn (\n  <p className=\"message\">Loading...</p>\n);\n\n}\n\nfunction Header({showF, showFF})\n{\n  return(\n    <header className=\"header\">\n    <div className=\"logo\">\n    <img src=\"logo.png\" alt=\"Logo\" width=\"68\" height=\"68\"/> \n    <h1>Today I Learned</h1> \n    </div>\n    <button className=\"btn btn-large btn-open\" \n    onClick={() =>showFF((showF) => !showF)}>\n    \n    {showF ? \"Close\" : \"Share a Fact\"}</button>\n   </header>\n\n  );\n}\n\n\nconst CATEGORIES = [\n  { name: 'technology', color: '#3b82f6' },\n  { name: 'science', color: '#16a34a' },\n  { name: 'finance', color: '#ef4444' },\n  { name: 'society', color: '#eab308' },\n  { name: 'entertainment', color: '#db2777' },\n  { name: 'health', color: '#14b8a6' },\n  { name: 'history', color: '#f97316' },\n  { name: 'news', color: '#8b5cf6' },\n];\n\n\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:';\n}\n\nfunction FactForm({setFacts, showFF}){\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [isUploading, setIsUploading] = useState(false);\n  var textLen = text.length;\n\n  async function HandleSubmit(e)\n{\n\n  // Not closing the form\n  e.preventDefault()\n  // console.log(text, source, category);\n  // \n  if (text && isValidHttpUrl(source) && category && textLen <= 200)\n  {\n    // creating new fact object\n    // const  newFact = {\n    //     id: Math.round(Math.random() * 10000000),\n    //     text,\n    //     source,\n    //     category,\n    //     votesInteresting: 0,\n    //     votesMindblowing: 0,\n    //     votesFalse: 0,\n    //     createdIn: new Date().getFullYear(),\n\n    // Uploading Fact to supabase table \n    setIsUploading(true);\n    const { data :newFact, error } = await supabase\n      .from(\"facts\")\n      .insert([\n      {text, source, category}\n      ])\n      .select();\n    setIsUploading(false);\n\n\n        \n      // 4. Add the new fact to the UI: add the fact to state\n      if (!error) setFacts((facts) => [newFact[0], ...facts]);\n\n      // setting text back to emplty string\n\n      setText('');\n      setSource('');\n      setCategory('');\n      textLen = 0;\n\n      //closing the form\n      showFF(false);\n\n\n\n\n  }\n}\n\n  return (\n  <form className=\"fact-form\" onSubmit={HandleSubmit}>\n    <input type=\"text\" placeholder=\"share a fact with the world\"   value={text} onChange={(e)=>setText(e.target.value)} disabled={isUploading}/>\n    <span>{200 - textLen}</span>\n    <input type=\"text\" placeholder=\"Trustworthy source\"   value={source} onChange={(e) => setSource(e.target.value)} disabled={isUploading}/>\n    <select value={category}  onChange={(e) =>(setCategory(e.target.value))} disabled={isUploading}>\n        <option value=\"\">Choose a Category</option>\n        {CATEGORIES.map((el) => (<option  key={el.name} value= {el.name} >{el.name.toUpperCase()}</option>)\n)}\n    </select>\n    <button className=\"btn btn-large\"  disabled={isUploading}>Post</button>\n\n  </form>\n  );\n}\n\n\nfunction FactList({facts, setFacts}){\n  // const temp = initialFacts;\n  if (facts.length === 0)\n  return  (<p className=\"message\">No facts for this category yet! Create the first one !!</p>);\n  \n  return( \n  <section>\n    <ul className=\"fact-list\">\n      {\n    facts.map((fact) =>(\n      <Fact key = {fact.id} fact = {fact} setFacts={setFacts}/>\n      ))\n      // setFacts={setFacts}\n    }\n    <p>There are total {facts.length} facts in our Database</p>\n\n    </ul></section>\n  ); \n}\n\n\n\nfunction Fact({fact, setFacts})\n{\n  const [isUpdating, setIsUpdating] = useState(false);\n  const isDisputed = fact.votesInteresting + fact.votesMindblowing < fact.votesFalse;\n  async function handleVote(columnName)\n  {\n    setIsUpdating(true); \n    const { data: updateFact, error } = await supabase\n    .from('facts')\n    .update({[columnName]: fact[columnName]+ 1 })\n    .eq(\"id\", fact.id)\n    .select();\n    setIsUpdating(false);\n\n    if(!error)\n        return setFacts((facts) => facts.map((f)=> (f.id === fact.id ? updateFact[0] : f)));\n        \n  } \n  return( \n    <li key={fact.id} className=\"fact\">\n        <p> \n            {isDisputed ? <span className=\"disputed\">[⛔️DISPUTED]</span> : null}\n            {fact.text}\n            <a className=\"source\" href={fact.source} target=\"_blank\">(Source)</a>   \n        </p> \n        <span className=\"tag\" style={{backgroundColor: CATEGORIES.find((cat) =>\n        cat.name  === fact.category).color }}>\n          {fact.category}</span>\n        <div className=\"vote-buttons\">\n            <button onClick={() => handleVote(\"votesInteresting\")} disabled={isUpdating}>👍 {fact.votesInteresting}</button>\n            <button onClick={() => handleVote(\"votesMindblowing\")} disabled={isUpdating}>🤯 {fact.votesMindblowing}</button>\n            <button onClick={() => handleVote(\"votesFalse\")} disabled={isUpdating}>⛔️ {fact.votesFalse}</button>\n        </div>\n    </li>\n\n  );\n}\n\n\n\nfunction CategoryFilter({currentCategory, setCurrentCategory}){\n  return ( \n  <aside>\n    <ul>\n    { <li className=\"category\"><button className=\"btn btn-all-categories\" onClick={() => setCurrentCategory(\"all\")}>All</button></li> }\n      {CATEGORIES.map((cat) => (\n        <li key={cat.name} className=\"category\"><button className=\"btn btn-category\"  onClick={() => setCurrentCategory(cat.name)}\n        style={{backgroundColor: cat.color}}>{cat.name}</button></li>\n\n      ))}\n    </ul>\n  </aside> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}